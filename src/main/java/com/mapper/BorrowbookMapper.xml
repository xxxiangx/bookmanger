<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mapper.BorrowbookMapper">
  <resultMap id="BaseResultMap" type="com.po.Borrowbook">
    <id column="reader_id" jdbcType="INTEGER" property="readerId" />
    <result column="isbn" jdbcType="VARCHAR" property="isbn" />
    <result column="borrowdate" jdbcType="TIMESTAMP" property="borrowdate" />
    <result column="returndate" jdbcType="TIMESTAMP" property="returndate" />
    <result column="fine" jdbcType="DECIMAL" property="fine" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    reader_id, isbn, borrowdate, returndate, fine
  </sql>
  <select id="selectByExample" parameterType="com.po.BorrowbookExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from borrowbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from borrowbook
    where reader_id = #{readerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from borrowbook
    where reader_id = #{readerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.po.BorrowbookExample">
    delete from borrowbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.po.Borrowbook">
    insert into borrowbook (reader_id, isbn, borrowdate, 
      returndate, fine)
    values (#{readerId,jdbcType=INTEGER}, #{isbn,jdbcType=VARCHAR}, #{borrowdate,jdbcType=TIMESTAMP}, 
      #{returndate,jdbcType=TIMESTAMP}, #{fine,jdbcType=DECIMAL})
  </insert>
  <insert id="insertSelective" parameterType="com.po.Borrowbook">
    insert into borrowbook
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="readerId != null">
        reader_id,
      </if>
      <if test="isbn != null">
        isbn,
      </if>
      <if test="borrowdate != null">
        borrowdate,
      </if>
      <if test="returndate != null">
        returndate,
      </if>
      <if test="fine != null">
        fine,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="readerId != null">
        #{readerId,jdbcType=INTEGER},
      </if>
      <if test="isbn != null">
        #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="borrowdate != null">
        #{borrowdate,jdbcType=TIMESTAMP},
      </if>
      <if test="returndate != null">
        #{returndate,jdbcType=TIMESTAMP},
      </if>
      <if test="fine != null">
        #{fine,jdbcType=DECIMAL},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.po.BorrowbookExample" resultType="java.lang.Long">
    select count(*) from borrowbook
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update borrowbook
    <set>
      <if test="record.readerId != null">
        reader_id = #{record.readerId,jdbcType=INTEGER},
      </if>
      <if test="record.isbn != null">
        isbn = #{record.isbn,jdbcType=VARCHAR},
      </if>
      <if test="record.borrowdate != null">
        borrowdate = #{record.borrowdate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.returndate != null">
        returndate = #{record.returndate,jdbcType=TIMESTAMP},
      </if>
      <if test="record.fine != null">
        fine = #{record.fine,jdbcType=DECIMAL},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update borrowbook
    set reader_id = #{record.readerId,jdbcType=INTEGER},
      isbn = #{record.isbn,jdbcType=VARCHAR},
      borrowdate = #{record.borrowdate,jdbcType=TIMESTAMP},
      returndate = #{record.returndate,jdbcType=TIMESTAMP},
      fine = #{record.fine,jdbcType=DECIMAL}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.po.Borrowbook">
    update borrowbook
    <set>
      <if test="isbn != null">
        isbn = #{isbn,jdbcType=VARCHAR},
      </if>
      <if test="borrowdate != null">
        borrowdate = #{borrowdate,jdbcType=TIMESTAMP},
      </if>
      <if test="returndate != null">
        returndate = #{returndate,jdbcType=TIMESTAMP},
      </if>
      <if test="fine != null">
        fine = #{fine,jdbcType=DECIMAL},
      </if>
    </set>
    where reader_id = #{readerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.po.Borrowbook">
    update borrowbook
    set isbn = #{isbn,jdbcType=VARCHAR},
      borrowdate = #{borrowdate,jdbcType=TIMESTAMP},
      returndate = #{returndate,jdbcType=TIMESTAMP},
      fine = #{fine,jdbcType=DECIMAL}
    where reader_id = #{readerId,jdbcType=INTEGER}
  </update>
</mapper>